version: '3'
services:
  database:
    image: 'postgres:13.4-alpine'
    environment:
      - 'POSTGRES_USER=${SERVICE_USER_POSTGRES}'
      - 'POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}'
      - 'POSTGRES_DB=${POSTGRES_DB:-hedgedoc}'
    volumes:
      - type: bind
        source: ./postgres
        target: /var/lib/postgresql/data
        # noinspection ComposeUnknownKeys
        is_directory: true # This will tell Coolify to create the directory (this is not available in a normal docker-compose)
    restart: unless-stopped
  app:
    image: 'quay.io/hedgedoc/hedgedoc:1.9.9'
    environment:
      SERVICE_FQDN_HEDGEDOC: /
      SERVICE_FQDN_HEDGEDOCSTATIC: /
      SERVICE_FQDN_HEDGEDOCSTATIC_${CMD_PORT:-3000}:
      CMD_PORT: ${CMD_PORT:-3000}
      CMD_DB_URL: 'postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@database:5432/${POSTGRES_DB:-hedgedoc}'
      CMD_DOMAIN: ${SERVICE_URL_HEDGEDOC_STATIC}  # for now has to be URL instead of FQDN, see https://github.com/coollabsio/coolify/issues/4104
      CMD_PROTOCOL_USESSL: ${CMD_PROTOCOL_USESSL:-true}
      CMD_URL_ADDPORT: 'false'
      CMD_SESSION_SECRET: ${SERVICE_PASSWORD_SESSION}
      CMD_ALLOW_ANONYMOUS: ${CMD_ALLOW_ANONYMOUS:-false}
      CMD_ALLOW_EMAIL_REGISTER: ${CMD_ALLOW_ANONYMOUS:-true}
      CMD_DEFAULT_PERMISSION: ${CMD_DEFAULT_PERMISSION:-limited}

      # https://docs.hedgedoc.org/guides/auth/github/
      CMD_GITHUB_CLIENTID: ${CMD_GITHUB_CLIENTID:-}
      CMD_GITHUB_CLIENTSECRET: ${CMD_GITHUB_CLIENTSECRET:-}
    volumes:
      - type: bind
        source: ./hedgedoc_uploads
        target: /hedgedoc/public/uploads
        # noinspection ComposeUnknownKeys
        is_directory: true # This will tell Coolify to create the directory (this is not available in a normal docker-compose)
    restart: unless-stopped
    depends_on:
      - database
